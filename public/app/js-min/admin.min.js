/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
/*!*******************************!*\
  !*** ./resources/js/admin.js ***!
  \*******************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Admin)
/* harmony export */ });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Admin = /*#__PURE__*/function () {
  function Admin() {
    _classCallCheck(this, Admin);
  }

  _createClass(Admin, null, [{
    key: "init",
    value:
    /*
       * Nodes
       * */

    /*
       * Init  listeners
       * */
    function init() {
      var openMenuBtn = Admin.nodes.openMenuBtn;
      openMenuBtn.addEventListener("click", function () {
        openMenuBtn.classList.toggle("open");
        Admin.nodes.menuNav.classList.toggle("open");
        Admin.nodes.mainGrid.classList.toggle("active");
        $(Admin.nodes.navItems).fadeToggle("open");
      });
      var fileInput = Admin.nodes.fileInput;

      if (fileInput) {
        fileInput.addEventListener("change", function (e) {
          var files = this.files;
          var fileNames = "";

          var _iterator = _createForOfIteratorHelper(files),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var file = _step.value;
              fileNames += "<span>".concat(file.name, "</span>");
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          var fileLabel = document.querySelector(".file-input__files");

          if (files.length >= 2) {
            fileLabel.innerHTML = fileNames;
          } else {
            fileLabel.textContent = e.target.value.split("\\").pop();
          }
        });
      }

      var productSizeSelect = Admin.nodes.productSizeSelect;

      if (productSizeSelect) {
        $(productSizeSelect).select2({
          placeholder: "Розміри продукту"
        });
        $(productSizeSelect).on("change", function (e) {
          var sizesArray = [];
          $("#sizes option:selected").each(function () {
            var $this = $(this);

            if ($this.length) {
              var index = sizesArray.findIndex(function (object) {
                return object.id === $this.val();
              });

              if (index === -1) {
                var selText = $this.text();
                var initial = Admin.initSizesArray();
                var idx = initial.findIndex(function (object) {
                  return object.id === $this.val();
                });
                sizesArray.push({
                  id: $this.val(),
                  value: idx !== -1 ? initial[idx].value : 0,
                  name: selText,
                  initial: idx !== -1
                });
              }
            }
          });

          if (sizesArray) {
            Admin.renderDynamicInputs(sizesArray, "#sizes_array");
          }
        });
      }
    }
  }, {
    key: "renderDynamicInputs",
    value: function renderDynamicInputs(source, rootEl) {
      var html = source.map(function (item) {
        var _item$value;

        return "<div class=\"".concat(item.initial && "ready-size", "\">\n                    <label for=\"count-size-").concat(item.id, "\">\u041A\u0456\u043B\u044C\u043A\u0456\u0441\u0442\u044C \u0442\u043E\u0432\u0430\u0440\u0456\u0432 \u0440\u043E\u0437\u043C\u0456\u0440\u0443 ").concat(item.name, ": </label>\n                    <input type=\"number\" id=\"count-size-").concat(item.id, "\"\n                           placeholder=\"5\"\n                           value=\"").concat((_item$value = item.value) !== null && _item$value !== void 0 ? _item$value : 0, "\"\n                           name=\"count-size-").concat(item.id, "\"\n                           data-id=\"").concat(item.id, "\"\n                           data-name=\"").concat(item.name, "\"\n                           >\n        </div>");
      }).join(" ");
      document.querySelector(rootEl).innerHTML = html;
    }
  }, {
    key: "initSizesArray",
    value: function initSizesArray() {
      var sizeArray = [];
      var sizeBlock = document.getElementById("sizes_array");
      var readySizes = sizeBlock.querySelectorAll(".ready-size");
      readySizes.forEach(function (size) {
        var _tempInput$value;

        var tempInput = size.querySelector("input");
        sizeArray.push({
          id: tempInput.dataset.id,
          name: tempInput.dataset.name,
          value: (_tempInput$value = tempInput.value) !== null && _tempInput$value !== void 0 ? _tempInput$value : 0,
          initial: true
        });
      });
      return sizeArray;
    }
  }]);

  return Admin;
}();

_defineProperty(Admin, "nodes", {
  openMenuBtn: document.querySelector(".admin-burger"),
  menuNav: document.querySelector(".admin-navbar"),
  navItems: document.querySelectorAll(".admin-navbar__title"),
  mainGrid: document.querySelector(".admin-body"),
  fileInput: document.getElementById("file_input"),
  productSizeSelect: document.getElementById("sizes")
});


Admin.init();
/******/ })()
;